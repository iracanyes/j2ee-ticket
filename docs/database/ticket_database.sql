-- MySQL Script generated by MySQL Workbench
-- Thu Oct 27 13:00:42 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema ticket
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ticket` ;

-- -----------------------------------------------------
-- Schema ticket
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ticket` DEFAULT CHARACTER SET utf8 ;
USE `ticket` ;

-- -----------------------------------------------------
-- Table `ticket`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`user` ;

CREATE TABLE IF NOT EXISTS `ticket`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticket`.`project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`project` ;

CREATE TABLE IF NOT EXISTS `ticket`.`project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `dateCreation` TIMESTAMP NOT NULL,
  `closed` TINYINT NOT NULL,
  `manager_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Project_User1`
    FOREIGN KEY (`manager_id`)
    REFERENCES `ticket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Project_User1_idx` ON `ticket`.`project` (`manager_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`status` ;

CREATE TABLE IF NOT EXISTS `ticket`.`status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `label` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticket`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`ticket` ;

CREATE TABLE IF NOT EXISTS `ticket`.`ticket` (
  `number` INT NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `date` DATETIME NOT NULL,
  `description` LONGTEXT NOT NULL,
  `project_id` INT NOT NULL,
  `author_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`number`),
  CONSTRAINT `fk_Ticket_Project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `ticket`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_User1`
    FOREIGN KEY (`author_id`)
    REFERENCES `ticket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_Status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `ticket`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Ticket_Project1_idx` ON `ticket`.`ticket` (`project_id` ASC) VISIBLE;

CREATE INDEX `fk_Ticket_User1_idx` ON `ticket`.`ticket` (`author_id` ASC) VISIBLE;

CREATE INDEX `fk_Ticket_Status1_idx` ON `ticket`.`ticket` (`status_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`comment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`comment` ;

CREATE TABLE IF NOT EXISTS `ticket`.`comment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` TEXT(255) NOT NULL,
  `user_id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Comment_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comment_ticket1`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticket`.`ticket` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Comment_User1_idx` ON `ticket`.`comment` (`user_id` ASC) VISIBLE;

CREATE INDEX `fk_Comment_ticket1_idx` ON `ticket`.`comment` (`ticket_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`status_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`status_history` ;

CREATE TABLE IF NOT EXISTS `ticket`.`status_history` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `user_id` INT NOT NULL,
  `comment_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  PRIMARY KEY (`id`, `status_id`, `ticket_number`),
  CONSTRAINT `fk_StatusHistory_User`
    FOREIGN KEY (`user_id`)
    REFERENCES `ticket`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StatusHistory_Comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `ticket`.`comment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StatusHistory_Status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `ticket`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StatusHistory_ticket1`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticket`.`ticket` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_StatusHistory_User_idx` ON `ticket`.`status_history` (`user_id` ASC) VISIBLE;

CREATE INDEX `fk_StatusHistory_Comment1_idx` ON `ticket`.`status_history` (`comment_id` ASC) VISIBLE;

CREATE INDEX `fk_StatusHistory_Status1_idx` ON `ticket`.`status_history` (`status_id` ASC) VISIBLE;

CREATE INDEX `fk_StatusHistory_ticket1_idx` ON `ticket`.`status_history` (`ticket_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`evolution`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`evolution` ;

CREATE TABLE IF NOT EXISTS `ticket`.`evolution` (
  `id` INT NOT NULL,
  `priority` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  PRIMARY KEY (`id`, `ticket_number`),
  CONSTRAINT `fk_Evolution_Ticket1`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticket`.`ticket` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Evolution_Ticket1_idx` ON `ticket`.`evolution` (`ticket_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`bug_level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`bug_level` ;

CREATE TABLE IF NOT EXISTS `ticket`.`bug_level` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order` INT NOT NULL,
  `label` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ticket`.`bug`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`bug` ;

CREATE TABLE IF NOT EXISTS `ticket`.`bug` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `bug_level_id` INT NOT NULL,
  `ticket_number` INT NOT NULL,
  PRIMARY KEY (`id`, `ticket_number`),
  CONSTRAINT `fk_Bug_BugLevel1`
    FOREIGN KEY (`bug_level_id`)
    REFERENCES `ticket`.`bug_level` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bug_Ticket1`
    FOREIGN KEY (`ticket_number`)
    REFERENCES `ticket`.`ticket` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Bug_BugLevel1_idx` ON `ticket`.`bug` (`bug_level_id` ASC) VISIBLE;

CREATE INDEX `fk_Bug_Ticket1_idx` ON `ticket`.`bug` (`ticket_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`version`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`version` ;

CREATE TABLE IF NOT EXISTS `ticket`.`version` (
  `number` VARCHAR(45) NOT NULL,
  `project_id` INT NOT NULL,
  PRIMARY KEY (`project_id`, `number`),
  CONSTRAINT `fk_Version_Project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `ticket`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Version_Project1_idx` ON `ticket`.`version` (`project_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`bug_version_affected`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`bug_version_affected` ;

CREATE TABLE IF NOT EXISTS `ticket`.`bug_version_affected` (
  `bug_id` INT NOT NULL,
  `bug_ticket_number` INT NOT NULL,
  `version_affected_number` INT NOT NULL,
  `version_affected_project_id` INT NOT NULL,
  PRIMARY KEY (`bug_id`, `bug_ticket_number`, `version_affected_number`, `version_affected_project_id`),
  CONSTRAINT `fk_Bug_has_Version_Bug1`
    FOREIGN KEY (`bug_id`)
    REFERENCES `ticket`.`bug` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Bug_has_Version_Version1`
    FOREIGN KEY (`version_affected_project_id`)
    REFERENCES `ticket`.`version` (`project_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Bug_has_Version_Version1_idx` ON `ticket`.`bug_version_affected` (`version_affected_number` ASC, `version_affected_project_id` ASC) VISIBLE;

CREATE INDEX `fk_Bug_has_Version_Bug1_idx` ON `ticket`.`bug_version_affected` (`bug_id` ASC, `bug_ticket_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `ticket`.`ticket_associated`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ticket`.`ticket_associated` ;

CREATE TABLE IF NOT EXISTS `ticket`.`ticket_associated` (
  `ticket_number` INT NOT NULL,
  `ticket_associated_number` INT NOT NULL,
  PRIMARY KEY (`ticket_number`, `ticket_associated_number`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
